<fetishmaster.engine.WalkEvent>
  <name>city/hospital/todd/help_start_smart</name>
  <descr>[Proxy] asks Todd if [heshe] can help him with anything.

- Actually, I&apos;ve been working on a device that scans babies after they&apos;ve been born. It&apos;s supposed to scan and detect how strong the baby will be when he or she will grow up. I believe this is one of the first steps to achieve DNA manipulation. I&apos;ve got most of the device working, but I need a power source to test and adjust the device. Have you heard of &apos;Power Crystals&apos;? They contain a lot more power than regular power sources. If you can get me 10 power crystals, I&apos;ll be able to finish the device.


Because of [Proxy]&apos;s rather high intelligence, [heshe] recognises what Todd is attempting to achieve. Reading the books in the library did pay off after all! [HeShe] tells Todd the alternative method that does not require any crystals.

- O-oh wow! You&apos;re totally right, how could I have missed that. Well, with this approach, I&apos;m going to need a few days to reconfigure the device.

&lt;% SetFlag(&quot;todd_started_help&quot;, 1); &quot;&quot;; %&gt;
&lt;% SetFlag(&quot;todd_need_crystals&quot;, 0); 
SetFlag(&quot;todd_waiting&quot;, 1);
SetFlag(&quot;gene_scanner_ready&quot;, clock.getAHours() + calc.PlusMinusXProcent(72, 20));
&quot;&quot;; %&gt;
&lt;%DisplayChar(&quot;char/todd.png&quot;); &quot;&quot;;%&gt;</descr>
  <conditions>GetFlag(&quot;todd_started_help&quot;) == 0 &amp;&amp; proxy.getStat(&quot;generic.int&quot;) &gt; 60;</conditions>
  <picturePath>city/hospital/dna_facility.jpg</picturePath>
  <choices>
    <fetishmaster.engine.WalkChoice>
      <name>Continue</name>
      <value>city/hospital/research_wing</value>
    </fetishmaster.engine.WalkChoice>
  </choices>
  <defaultNext>New event</defaultNext>
  <time>0</time>
  <priority>2</priority>
  <returnPoint>false</returnPoint>
  <bypassInternalChecks>false</bypassInternalChecks>
  <mergeDown>false</mergeDown>
  <parsedDesc></parsedDesc>
</fetishmaster.engine.WalkEvent>